#Secrets - MySQL encoded username and password
apiVersion : v1
kind : Secret
metadata:
  name : mysql-secrets
data:
  username : cm9vdA==
  password : cm9vdA==

---

# ConfigMap - db-config
apiVersion : v1
kind : ConfigMap
metadata:
  name : db-config
data:
  host : mysql
  dbName: mydb

---

# StorageClass
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: gcp-storage-class
provisioner: kubernetes.io/gce-pd
parameters:
  type: pd-standard
  fstype: ext4
  replication-type: none
reclaimPolicy: Retain
allowVolumeExpansion: true
mountOptions:
  - debug


---

# Define a 'Service' To Expose mysql to Other Services
apiVersion: v1
kind: Service
metadata:
  name: mysql  # DNS name
  labels:
    app: mysql
    tier: database
spec:
  type: ClusterIP # Note: The default Service type in Kubernetes, if no type is specified, is "ClusterIP".
  ports:
    - name: mysql
      port: 3306
  selector:       # mysql Pod Should contain same labels
    app: mysql
    tier: database
  clusterIP: None  # We Use DNS, Thus ClusterIP is not relevant



---


# Define a 'Service' To Expose mysql to Other Services
apiVersion: v1
kind: Service
metadata:
  name: mysql-read  # DNS name
  labels:
    app: mysql
    tier: database
spec:
  ports:
    - name: mysql
      port: 3306
  selector:       # mysql Pod Should contain same labels
    app: mysql
    tier: database
    
---

# Configure 'StatefulSet' of mysql server
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mysql
spec:
  selector:
    matchLabels:
      app: mysql
  serviceName: mysql
  replicas: 3
  template:
    metadata:
      labels:
        app: mysql
    spec:
      terminationGracePeriodSeconds: 5
      containers:
        - name: mysql
          image: mysql:latest
          ports:
            - name: mysql
              containerPort: 3306
          env:
            - name: MYSQL_DATABASE # Setting Database Name from a 'ConfigMap'
              valueFrom:
                configMapKeyRef:
                  name: db-config
                  key: dbName
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-secrets
                  key: password
          volumeMounts:
            - name: data
              mountPath: /var/lib/mysql
            - name: conf
              mountPath: /etc/mysql/conf.d
      volumes: 
        - name: conf
          emptyDir: {}
        - name: config-map
          configMap: 
            name: mysql    
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        storageClassName: gcp-storage-class
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 1Gi

